(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,'html {\n  background-color: aliceblue;\n}\n\nbody {\n  font: 1em sans-serif;\n  width: 500px;\n  padding: 0;\n  margin: 0 auto;\n}\n\nh1 {\n  text-align: center;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 240px 240px;\n  grid-template-rows: 50px 50px 50px 50px 175px;\n  grid-column-gap: 10px;\n  grid-row-gap: 10px;\n}\n\n.container * {\n  display: block;\n}\n\n.mailBox {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n\n.countryBox {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 3;\n}\n\n.zipCodeBox {\n  grid-column-start: 2;\n  grid-column-end: 3;\n  grid-row-start: 2;\n  grid-row-end: 3;\n}\n\n.passwordBox {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 3;\n  grid-row-end: 4;\n}\n\n.passwordConfBox {\n  grid-column-start: 2;\n  grid-column-end: 3;\n  grid-row-start: 3;\n  grid-row-end: 4;\n}\n\n#submitButton {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 4;\n  grid-row-end: 5;\n  border-color: rgb(3, 0, 153);\n  background-color: rgb(175, 196, 241);\n}\n\n#submitButton:hover {\n  background-color: rgb(125, 164, 248);\n}\n\n#message {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 5;\n  grid-row-end: 6;\n  display: none;\n  background: #f1f1f1;\n  color: #000;\n  position: relative;\n  padding-left: 20px;\n}\n\n#message h3 {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n#message h6 {\n  padding-left: 35px;\n  margin: 5px;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n#message .valid {\n  color: green;\n}\n\n#message .valid:before {\n  position: relative;\n  left: -35px;\n  content: "✔";\n}\n\n#message .invalid {\n  color: red;\n}\n\n#message .invalid:before {\n  position: relative;\n  left: -35px;\n  content: "✖";\n}\n\ninput,\nselect {\n  /* appearance: none; */\n\n  width: 100%;\n  border: 1px solid #333;\n  margin: 0;\n\n  font-family: inherit;\n  font-size: 90%;\n\n  box-sizing: border-box;\n}\n\n/* This is our style for the invalid fields */\ninput:invalid,\nselect:invalid {\n  border-color: rgb(84, 0, 153);\n  background-color: rgb(227, 219, 231);\n}\n\ninput:valid,\nselect:valid {\n  border-color: rgb(84, 0, 153);\n  background-image: linear-gradient(to right, rgb(119, 171, 248), lightgreen);\n}\n\ninput:focus:invalid,\nselect:focus:invalid {\n  outline: none;\n}\n\n/* This is the style of our error messages */\n.error {\n  width: 100%;\n  padding: 0;\n\n  font-size: 80%;\n  color: white;\n  background-color: rgb(146, 115, 196);\n  border-radius: 0 0 5px 5px;\n\n  box-sizing: border-box;\n}\n\n.error.active {\n  padding: 0.3em;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,2BAA2B;AAC7B;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,UAAU;EACV,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,6CAA6C;EAC7C,qBAAqB;EACrB,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;EACf,4BAA4B;EAC5B,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,oBAAoB;EACpB,kBAAkB;EAClB,iBAAiB;EACjB,eAAe;EACf,aAAa;EACb,mBAAmB;EACnB,WAAW;EACX,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,sBAAsB;;EAEtB,WAAW;EACX,sBAAsB;EACtB,SAAS;;EAET,oBAAoB;EACpB,cAAc;;EAEd,sBAAsB;AACxB;;AAEA,6CAA6C;AAC7C;;EAEE,6BAA6B;EAC7B,oCAAoC;AACtC;;AAEA;;EAEE,6BAA6B;EAC7B,2EAA2E;AAC7E;;AAEA;;EAEE,aAAa;AACf;;AAEA,4CAA4C;AAC5C;EACE,WAAW;EACX,UAAU;;EAEV,cAAc;EACd,YAAY;EACZ,oCAAoC;EACpC,0BAA0B;;EAE1B,sBAAsB;AACxB;;AAEA;EACE,cAAc;AAChB",sourcesContent:['html {\n  background-color: aliceblue;\n}\n\nbody {\n  font: 1em sans-serif;\n  width: 500px;\n  padding: 0;\n  margin: 0 auto;\n}\n\nh1 {\n  text-align: center;\n}\n\n.container {\n  display: grid;\n  grid-template-columns: 240px 240px;\n  grid-template-rows: 50px 50px 50px 50px 175px;\n  grid-column-gap: 10px;\n  grid-row-gap: 10px;\n}\n\n.container * {\n  display: block;\n}\n\n.mailBox {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 1;\n  grid-row-end: 2;\n}\n\n.countryBox {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 2;\n  grid-row-end: 3;\n}\n\n.zipCodeBox {\n  grid-column-start: 2;\n  grid-column-end: 3;\n  grid-row-start: 2;\n  grid-row-end: 3;\n}\n\n.passwordBox {\n  grid-column-start: 1;\n  grid-column-end: 2;\n  grid-row-start: 3;\n  grid-row-end: 4;\n}\n\n.passwordConfBox {\n  grid-column-start: 2;\n  grid-column-end: 3;\n  grid-row-start: 3;\n  grid-row-end: 4;\n}\n\n#submitButton {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 4;\n  grid-row-end: 5;\n  border-color: rgb(3, 0, 153);\n  background-color: rgb(175, 196, 241);\n}\n\n#submitButton:hover {\n  background-color: rgb(125, 164, 248);\n}\n\n#message {\n  grid-column-start: 1;\n  grid-column-end: 3;\n  grid-row-start: 5;\n  grid-row-end: 6;\n  display: none;\n  background: #f1f1f1;\n  color: #000;\n  position: relative;\n  padding-left: 20px;\n}\n\n#message h3 {\n  font-size: 20px;\n  font-weight: 600;\n}\n\n#message h6 {\n  padding-left: 35px;\n  margin: 5px;\n  font-size: 16px;\n  font-weight: 500;\n}\n\n#message .valid {\n  color: green;\n}\n\n#message .valid:before {\n  position: relative;\n  left: -35px;\n  content: "✔";\n}\n\n#message .invalid {\n  color: red;\n}\n\n#message .invalid:before {\n  position: relative;\n  left: -35px;\n  content: "✖";\n}\n\ninput,\nselect {\n  /* appearance: none; */\n\n  width: 100%;\n  border: 1px solid #333;\n  margin: 0;\n\n  font-family: inherit;\n  font-size: 90%;\n\n  box-sizing: border-box;\n}\n\n/* This is our style for the invalid fields */\ninput:invalid,\nselect:invalid {\n  border-color: rgb(84, 0, 153);\n  background-color: rgb(227, 219, 231);\n}\n\ninput:valid,\nselect:valid {\n  border-color: rgb(84, 0, 153);\n  background-image: linear-gradient(to right, rgb(119, 171, 248), lightgreen);\n}\n\ninput:focus:invalid,\nselect:focus:invalid {\n  outline: none;\n}\n\n/* This is the style of our error messages */\n.error {\n  width: 100%;\n  padding: 0;\n\n  font-size: 80%;\n  color: white;\n  background-color: rgb(146, 115, 196);\n  border-radius: 0 0 5px 5px;\n\n  box-sizing: border-box;\n}\n\n.error.active {\n  padding: 0.3em;\n}\n'],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(a[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],A=0;A<n.length;A++){var s=n[A],d=o.base?s[0]+o.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var u=t(c),g={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(g);else{var p=r(g,o);o.byIndex=A,e.splice(A,0,{identifier:c,updater:p,references:1})}a.push(c)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=t(i[a]);e[A].references--}for(var s=o(n,r),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),o=t(795),r=t.n(o),i=t(569),a=t.n(i),A=t(565),s=t.n(A),d=t(216),l=t.n(d),c=t(589),u=t.n(c),g=t(426),p={};p.styleTagTransform=u(),p.setAttributes=s(),p.insert=a().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=l(),e()(g.Z,p),g.Z&&g.Z.locals&&g.Z.locals;const m=document.querySelector("form"),E=document.getElementById("mail"),B=document.getElementById("country"),C=document.getElementById("zipCode"),f=document.getElementById("password"),v=document.getElementById("letter"),b=document.getElementById("capital"),y=document.getElementById("number"),h=document.getElementById("length"),x=document.getElementById("passwordConf");function w(){E.validity.valueMissing?E.setCustomValidity("You need to enter an email address"):E.validity.typeMismatch?E.setCustomValidity("Entered value needs to be an email address"):E.validity.tooShort?E.setCustomValidity(`Email should be at least ${E.minLength} characters; you entered ${E.value.length}`):E.setCustomValidity("")}function k(){const n={"":["[a-zA-Z]","Must Enter Country Code"],usa:["[0-9]{5}","US ZIPs must have exactly 5 digits: 98103 or 53558"],ca:["[A-Za-z]{1}[0-9]{1}[A-Za-z]{1} [0-9]{1}[A-Za-z]{1}[0-9]{1}","Canadian ZIPs must follow this pattern A1A 1A1."],mx:["[0-9]{5}","Mexican ZIPs must have exactly 5 digits: 77507 or 01049"]},e=document.getElementById("country").value,t=new RegExp(n[e][0],"");C.validity.valueMissing?C.setCustomValidity("You need to enter a Zip Code"):t.test(C.value)?C.setCustomValidity(""):C.setCustomValidity(n[e][1])}function I(){document.getElementById("password").value!==document.getElementById("passwordConf").value?x.setCustomValidity("Passwords do not match"):x.setCustomValidity("")}f.onfocus=function(){document.getElementById("message").style.display="block"},f.onblur=function(){document.getElementById("message").style.display="none"},f.onkeyup=function(){f.value.match(/[a-z]/g)?(v.classList.remove("invalid"),v.classList.add("valid")):(v.classList.remove("valid"),v.classList.add("invalid")),f.value.match(/[A-Z]/g)?(b.classList.remove("invalid"),b.classList.add("valid")):(b.classList.remove("valid"),b.classList.add("invalid")),f.value.match(/[0-9]/g)?(y.classList.remove("invalid"),y.classList.add("valid")):(y.classList.remove("valid"),y.classList.add("invalid")),f.value.length>=8?(h.classList.remove("invalid"),h.classList.add("valid")):(h.classList.remove("valid"),h.classList.add("invalid"))},window.onload=()=>{B.onchange=k,C.oninput=k,E.oninput=w,x.oninput=I},m.addEventListener("submit",(n=>{E.validity.valid||(w(),n.preventDefault()),C.validity.valid||(k(),n.preventDefault()),f.validity.valid||(I(),n.preventDefault()),x.validity.valid||(I(),n.preventDefault())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,